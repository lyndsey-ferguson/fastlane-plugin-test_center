require_relative 'test_center_utils'

# Retrieves the example code from each action and runs it to ensure that everything
# is working as intended.
lane :run_examples do
  action_examples.values.flatten.each do |example_code_snippet|
    # rubocop:disable Security/Eval
    eval(example_code_snippet)
    # rubocop:enable Security/Eval
  end
end

lane :integration_test_simple do
  multi_scan(
    workspace: File.absolute_path('../AtomicBoy/AtomicBoy.xcworkspace'),
    scheme: 'AtomicBoy',
    fail_build: false,
    try_count: 2,
    only_testing: ['AtomicBoyUITests/AtomicBoyUITests/testExample']
  )
end

lane :integration_test_basic do
  multi_scan(
    workspace: File.absolute_path('../AtomicBoy/AtomicBoy.xcworkspace'),
    scheme: 'AtomicBoy',
    fail_build: false,
    try_count: 2
  )
end

lane :integration_test_basic_edgecase_1 do
  multi_scan(
    workspace: File.absolute_path('../AtomicBoy/AtomicBoy.xcworkspace'),
    scheme: 'AtomicBoy',
    fail_build: false,
    try_count: 2,
    only_testing: ['AtomicBoyUITests', 'AtomicBoyTests']
  )

  multi_scan(
    workspace: File.absolute_path('../AtomicBoy/AtomicBoy.xcworkspace'),
    scheme: 'AtomicBoy',
    fail_build: false,
    try_count: 2,
    only_testing: ['AtomicBoyUITests/AtomicBoyUITests']
  )
end

lane :integration_test_parallel do
  multi_scan(
    workspace: File.absolute_path('../AtomicBoy/AtomicBoy.xcworkspace'),
    scheme: 'AtomicBoy',
    fail_build: false,
    try_count: 2,
    parallel_testrun_count: 2
  )
end

lane :integration_test_parallel_edgecase_1 do
  multi_scan(
    workspace: File.absolute_path('../AtomicBoy/AtomicBoy.xcworkspace'),
    scheme: 'AtomicBoy',
    fail_build: false,
    try_count: 2,
    parallel_testrun_count: 4,
    only_testing: ['AtomicBoyUITests/AtomicBoyUITests/testExample']
  )
end

lane :integration_test_batches do
  multi_scan(
    workspace: File.absolute_path('../AtomicBoy/AtomicBoy.xcworkspace'),
    scheme: 'AtomicBoy',
    fail_build: false,
    try_count: 2,
    batch_count: 2
  )
end
